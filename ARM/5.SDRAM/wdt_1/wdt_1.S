/*
 *
 *	名字：led_6.S
 *	作用：实现流水灯的效果，流水灯也叫走马灯,走过来又走过去
 *
 */
 
#define GPJ0CON  0xE0200240			
#define GPJ0DAT  0xE0200244
#define GPD0CON  0xE02000A0
#define GPD0DAT  0xE02000A4
#define WTCON    0xE2700000

.global _start				
 _start:
	
	//关看门狗,操作看门狗的那个寄存器就是WTCON，那个观看门狗的那个功能就是第五位，0表示关，1表示的是开
	ldr r0, =WTCON
	ldr r1, =0x0
	str r1, [r0]
	
	//设置模式，下面的都是功能代码
	ldr r0, =GPJ0CON
	ldr r2, =GPD0CON
	ldr r3, =0x00000010
	ldr r1, =0x11111111
	str r1, [r0]
	str r3, [r2]
	
	//先熄灭第四个灯，因为一开始默认是0的,所以就要先把它熄灭掉，为什么下面的灯不用熄灭呢，那就是程序
	//执行的很快，你根本没发现它就执行下去了
	ldr r0, =GPD0DAT
	ldr r1, =0xf				//注意：这里是很容易把它写成0x1的，f才是全部都是1，就是四个1
	str r1, [r0]
	
flash:
	//点亮第一个
	ldr r0, =GPJ0DAT
	ldr r1, =(0<<3)|(1<<4)|(1<<5)
	str r1, [r0]
	
	//延迟
	bl delay
	
	//点亮第二个
	ldr r0, =GPJ0DAT
	ldr r1, =(1<<3)|(0<<4)|(1<<5)
	str r1, [r0]
	
	//延迟
	bl delay
	
	//点亮第三个
	ldr r0, =GPJ0DAT
	ldr r1, =(1<<3)|(1<<4)|(0<<5)
	str r1, [r0]
	
	//延迟
	bl delay
	
	//之前三个全部熄灭
	ldr r0, =GPJ0DAT
	ldr r1, =(1<<3)|(1<<4)|(1<<5)
	str r1, [r0]
	
	//点亮第四个
	ldr r0, =GPD0DAT
	ldr r1, =0<<1
	str r1, [r0]
	
	//延迟
	bl delay
	
	//熄灭第四个
	ldr r0, =GPD0DAT
	ldr r1, =1<<1
	str r1, [r0]
	
	//点亮第三个
	ldr r0, =GPJ0DAT
	ldr r1, =(1<<3)|(1<<4)|(0<<5)
	str r1, [r0]
	
	//延迟
	bl delay
	
	//点亮第二个
	ldr r0, =GPJ0DAT
	ldr r1, =(1<<3)|(0<<4)|(1<<5)
	str r1, [r0]
	
	//延迟
	bl delay
	
	//点亮第一个
	ldr r0, =GPJ0DAT
	ldr r1, =(0<<3)|(1<<4)|(1<<5)
	str r1, [r0]
	
	b flash						
					
delay:
	ldr r2, =9000000
	ldr r3, =0x0
	
delay_loop:
	sub r2, r2, #1						 
	cmp r2, r3					
	bne delay_loop
	mov pc, lr		


/*
总结：
1.看门狗的作用：就是用来复位系统的。因为这些IC设备有可能会跑飞或者是死机，当无人看管的时候就无法进行人工
的复位，这时候就需要看门狗来进行复位了。
2.实现的原理：看门狗其实就是一个定时器来的，就是事先设定好那么多时间，如果超过了时间没有去喂狗（就是重新置位看门狗的时间）的话，看门狗就会自动的重置系统，导致系统重新运行。系统正常运行的时候都是会自动的去喂狗的，系统不正常运行的时候就不喂狗，等到下一个周期的时候看门狗就会重置系统了。之后系统又可以正产工作了。
这些对于人工难于干预的设备很有用，就像工业设备和那些航空设备，但是对于那些智能手机和游戏机，电脑这些社别就没有什么用处了，因为死机的时候，我们自己会去开机的。所以这颗spv210的芯片在irom中bl0的那部分代码中就已经关闭了看门狗了，但是有很多芯片都没有代码去关闭看门狗，需要自己写代码去关闭看门狗，所以我们要学习怎么去关闭看门狗。
3.如何关闭看门狗：就是找到他的核心寄存器（WTCON），把第五位置位0就可以了，详细的可以参考数据手册。
*/ 
 
 
 
 
 
 
 
 
 
 